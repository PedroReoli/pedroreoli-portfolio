@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --radius: 0.5rem;

    /* Cosmic theme colors - deep space dark blue */
    --cosmic-bg-rgb: 4, 13, 33;
    --cosmic-card-rgb: 6, 21, 41;
    --cosmic-border-rgb: 15, 23, 42;
    --cosmic-text-rgb: 148, 163, 184;
    --cosmic-accent-rgb: 59, 130, 246;

    --cosmic-bg: rgb(var(--cosmic-bg-rgb));
    --cosmic-card: rgb(var(--cosmic-card-rgb));
    --cosmic-border: rgb(var(--cosmic-border-rgb));
    --cosmic-text: rgb(var(--cosmic-text-rgb));
    --cosmic-accent: rgb(var(--cosmic-accent-rgb));

    /* Cosmic theme star colors - authentic space */
    --star-blue: #93c5fd;
    --star-purple: #c4b5fd;
    --star-pink: #f0abfc;
    --star-white: #ffffff;

    /* Nebula colors - deeper space colors */
    --nebula-blue: rgba(37, 99, 235, 0.25);
    --nebula-purple: rgba(109, 40, 217, 0.25);
    --nebula-pink: rgba(190, 24, 93, 0.25);
    --nebula-teal: rgba(15, 118, 110, 0.25);
  }

  /* Adicionando regras globais para evitar overflow horizontal */
  html,
  body,
  #root {
    position: relative;
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
  }

  /* Garantindo que todos os containers tenham position: relative */
  section,
  main,
  div[class*="container"] {
    position: relative;
  }
}

@layer utilities {
  .animate-wave {
    animation: wave 2.5s infinite;
  }

  @keyframes wave {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(14deg);
    }
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    50% {
      transform: rotate(10deg);
    }
    60% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }

  .cosmic-shimmer {
    background: linear-gradient(90deg, rgba(96, 165, 250, 0.2), rgba(96, 165, 250, 0.4), rgba(96, 165, 250, 0.2));
    background-size: 200% 100%;
    animation: shimmer 8s ease-in-out infinite;
  }

  .cosmic-glow {
    filter: drop-shadow(0 0 12px rgba(96, 165, 250, 0.7));
  }

  .cosmic-text-gradient {
    background: linear-gradient(to right, #60a5fa, #93c5fd, #3b82f6);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    background-size: 200% 100%;
    animation: shimmer 8s ease-in-out infinite;
  }

  /* Meteor animations - improved */
  @keyframes meteor {
    0% {
      /* Substituído 100vw por 100% para evitar overflow */
      transform: translate(calc(-100% - 50px), calc(-100% - 50px)) rotate(var(--meteor-angle, 215deg));
      opacity: 0;
    }
    5% {
      opacity: 1;
    }
    95% {
      opacity: 1;
    }
    100% {
      /* Substituído 100vw por 100% para evitar overflow */
      transform: translate(calc(100% + 50px), calc(100% + 50px)) rotate(var(--meteor-angle, 215deg));
      opacity: 0;
    }
  }

  .animate-meteor {
    position: absolute;
    width: 1px;
    height: 1px;
    background-color: white;
    border-radius: 50%;
    animation: meteor var(--meteor-duration, 10s) cubic-bezier(0.05, 0.5, 0.95, 0.95) infinite;
    animation-delay: var(--meteor-delay, 0s);
    transform-origin: center;
    z-index: 1;
  }

  /* Star twinkle animation - more dramatic */
  @keyframes twinkle {
    0%,
    100% {
      opacity: var(--base-opacity, 0.7);
      transform: scale(1);
    }
    50% {
      opacity: var(--peak-opacity, 1);
      transform: scale(var(--peak-scale, 1.3));
    }
  }

  .animate-twinkle {
    animation: twinkle var(--twinkle-duration, 3s) ease-in-out infinite;
    animation-delay: var(--twinkle-delay, 0s);
  }

  /* Cosmic dust animation */
  @keyframes float {
    0%,
    100% {
      transform: translateY(0) translateX(0);
    }
    25% {
      transform: translateY(var(--float-y, -10px)) translateX(var(--float-x, 5px));
    }
    50% {
      transform: translateY(0) translateX(var(--float-x-alt, 10px));
    }
    75% {
      transform: translateY(var(--float-y-alt, 10px)) translateX(var(--float-x, 5px));
    }
  }

  .animate-float {
    animation: float var(--float-duration, 15s) ease-in-out infinite;
    animation-delay: var(--float-delay, 0s);
  }

  /* Nebula pulse animation - more dramatic */
  @keyframes nebula-pulse {
    0%,
    100% {
      opacity: var(--nebula-min-opacity, 0.2);
      transform: scale(var(--nebula-min-scale, 0.95));
      filter: blur(var(--nebula-min-blur, 80px));
    }
    50% {
      opacity: var(--nebula-max-opacity, 0.4);
      transform: scale(var(--nebula-max-scale, 1.05));
      filter: blur(var(--nebula-max-blur, 100px));
    }
  }

  .animate-nebula-pulse {
    animation: nebula-pulse var(--nebula-duration, 20s) ease-in-out infinite;
    animation-delay: var(--nebula-delay, 0s);
  }

  /* Shimmer animation */
  @keyframes shimmer {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  /* Deep space background - darker */
  .deep-space-bg {
    background: radial-gradient(ellipse at bottom, #0f172a 0%, #020617 100%);
    background-attachment: fixed;
  }

  /* Parallax layers - otimizados para reduzir consumo de memória */
  /* Removido will-change para evitar alto consumo de memória */
  .parallax-layer-1 {
    transform: translateZ(-100px) scale(1.5);
  }

  .parallax-layer-2 {
    transform: translateZ(-200px) scale(2);
  }

  .parallax-layer-3 {
    transform: translateZ(-300px) scale(2.5);
  }

  /* Classes adicionais para garantir responsividade */
  .responsive-container {
    position: relative;
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
  }

  /* Classe para substituir width: 100vw */
  .full-width {
    width: 100%;
    max-width: 100%;
  }

  /* Classe para garantir que elementos com efeitos de parallax tenham position: relative */
  .parallax-container {
    position: relative;
    overflow: hidden;
  }
}

